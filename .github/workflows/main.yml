name: Ubuntu Desktop with noVNC and Tunnel

on:
  workflow_dispatch:

jobs:
  run-desktop:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # Maximum 6 hours allowed by GitHub Actions

    steps:
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y xfce4 xfce4-goodies tightvncserver git curl wget
        sudo apt install -y python3 python3-pip
        pip3 install websockify

    - name: Setup VNC server
      run: |
        mkdir -p ~/.vnc
        echo "123456" | vncpasswd -f > ~/.vnc/passwd
        chmod 600 ~/.vnc/passwd
        
        echo '#!/bin/bash
        xrdb $HOME/.Xresources
        startxfce4 &' > ~/.vnc/xstartup
        chmod +x ~/.vnc/xstartup
        
        vncserver :1 -geometry 1280x720 -depth 24

    - name: Setup noVNC
      run: |
        git clone https://github.com/novnc/noVNC.git ~/noVNC
        git clone https://github.com/novnc/websockify.git ~/noVNC/utils/websockify

    - name: Run noVNC server
      run: |
        ~/noVNC/utils/novnc_proxy --vnc localhost:5901 --listen 6080 > ~/novnc.log 2>&1 &
        sleep 5
        echo "‚úÖ noVNC server started on port 6080"

    - name: Setup Cloudflare Tunnel (Alternative 1 - Recommended)
      run: |
        # Download and install cloudflared
        wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
        sudo dpkg -i cloudflared-linux-amd64.deb
        
        # Start tunnel
        cloudflared tunnel --url http://localhost:6080 > ~/tunnel.log 2>&1 &
        sleep 10
        
        # Extract and display the public URL
        TUNNEL_URL=$(grep -o 'https://[a-zA-Z0-9-]*\.trycloudflare\.com' ~/tunnel.log | head -1)
        echo "üöÄ Cloudflare Tunnel URL: $TUNNEL_URL"
        echo "TUNNEL_URL=$TUNNEL_URL" >> $GITHUB_ENV

    # Alternative tunnel option - uncomment if you prefer serveo.net (less reliable)
    # - name: Setup Serveo Tunnel (Alternative 2)
    #   run: |
    #     ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -R 80:localhost:6080 serveo.net > ~/tunnel.log 2>&1 &
    #     sleep 15
    #     TUNNEL_URL=$(grep -o 'https://[a-zA-Z0-9]*\.serveo\.net' ~/tunnel.log | head -1)
    #     echo "üöÄ Serveo Tunnel URL: $TUNNEL_URL"
    #     echo "TUNNEL_URL=$TUNNEL_URL" >> $GITHUB_ENV

    # Alternative tunnel option - localhost.run
    # - name: Setup localhost.run Tunnel (Alternative 3)
    #   run: |
    #     ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -R 80:localhost:6080 localhost.run > ~/tunnel.log 2>&1 &
    #     sleep 15
    #     TUNNEL_URL=$(grep -o 'https://[a-zA-Z0-9-]*\.lhr\.life' ~/tunnel.log | head -1)
    #     echo "üöÄ localhost.run Tunnel URL: $TUNNEL_URL"
    #     echo "TUNNEL_URL=$TUNNEL_URL" >> $GITHUB_ENV

    - name: Show connection info
      run: |
        echo "=============================================="
        echo "üñ•Ô∏è  Ubuntu Desktop with noVNC is ready!"
        echo "=============================================="
        echo "üîí VNC Password: 123456"
        echo "üåê Public URL: $TUNNEL_URL"
        echo "=============================================="
        echo ""
        echo "üìù Instructions:"
        echo "1. Open the URL above in your web browser"
        echo "2. Click 'Connect'"
        echo "3. Enter password: 123456"
        echo "4. Enjoy your remote Ubuntu desktop!"
        echo "=============================================="
        echo ""
        echo "‚è∞ Session will remain active for up to 6 hours"
        echo "   (GitHub Actions maximum runtime limit)"

    - name: Keep session alive
      run: |
        echo "üîÑ Keeping session alive..."
        echo "Press Ctrl+C in GitHub Actions UI to terminate the session"
        echo ""
        
        # Keep the job running and show periodic status updates
        COUNTER=0
        while [ $COUNTER -lt 360 ]; do
          MINUTES=$((COUNTER * 10))
          echo "‚è±Ô∏è  Session active for $MINUTES minutes | Tunnel URL: $TUNNEL_URL"
          sleep 600  # Sleep for 10 minutes
          COUNTER=$((COUNTER + 1))
        done
        
        echo "‚è∞ Maximum runtime (6 hours) reached. Session ending."
